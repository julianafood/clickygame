{"ast":null,"code":"var _jsxFileName = \"/Users/julianacho/code/clickygame/src/App.js\";\nimport React, { Component } from \"react\";\nimport FriendCard from \"./components/FriendCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport friends from \"./friends.json\";\nimport Scores from \"./components/Scores\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      friends: friends,\n      score: 0,\n      top_score: 0\n    };\n\n    this.initSelected = () => {\n      let friends = this.state.friends.map(friend => {\n        friend.selected = false;\n        return friend;\n      });\n      return friends;\n    };\n\n    this.shuffle = array => {\n      console.log(\"shuffle\");\n\n      for (let i = array.length - 1; i > 0; i--) {\n        let j = Math.floor(Math.random() * (i + 1)); // random index from 0 to i\n\n        var _ref = [array[j], array[i]];\n        array[i] = _ref[0];\n        array[j] = _ref[1];\n      }\n    };\n\n    this.selectFriend = id => {\n      console.log(\"selected id : \" + id);\n      const friend = this.state.friends.filter(friend => friend.id === id);\n      console.log(\"Matching friend : \" + JSON.stringify(friend));\n      console.log(\"Selected ? \" + friend[0].selected);\n      let friends;\n      let score = this.state.score;\n      let top_score = this.state.top_score;\n\n      if (friend[0].selected === true) {\n        console.log(\"Friend already selected!!\");\n        score = 0;\n        friends = this.initSelected();\n      } else {\n        console.log(\"Not yet selected.\");\n        score = score + 1;\n\n        if (score > top_score) {\n          top_score = score;\n        }\n\n        friends = this.state.friends.map(friend => {\n          if (friend.id === id) {\n            console.log(\"Setting friend id \" + id + \" to selected.\");\n            friend.selected = true;\n          }\n\n          return friend;\n        });\n      }\n\n      this.shuffle(friends);\n      this.setState({\n        friends: friends,\n        score: score,\n        top_score: top_score\n      });\n    };\n  }\n\n  componentWillMount() {\n    let friends = this.initSelected();\n    this.setState({\n      friends: friends\n    });\n  }\n\n  render() {\n    console.log(\"rendering\");\n    console.log(\"score : \" + this.state.score);\n    console.log(\"top_score : \" + this.state.top_score);\n    return React.createElement(Wrapper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \"Friends List\"), React.createElement(Scores, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"Score \", this.state.score, \"| Top Score \", this.state.top_score), this.state.friends.map(friend => React.createElement(FriendCard, {\n      selectFriend: this.selectFriend,\n      id: friend.id,\n      key: friend.id,\n      name: friend.name,\n      image: friend.image,\n      occupation: friend.occupation,\n      location: friend.location,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/julianacho/code/clickygame/src/App.js"],"names":["React","Component","FriendCard","Wrapper","Title","friends","Scores","App","state","score","top_score","initSelected","map","friend","selected","shuffle","array","console","log","i","length","j","Math","floor","random","selectFriend","id","filter","JSON","stringify","setState","componentWillMount","render","name","image","occupation","location"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport FriendCard from \"./components/FriendCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport friends from \"./friends.json\";\nimport Scores from \"./components/Scores\";\n\nclass App extends Component {\n  state = {\n    friends: friends,\n    score: 0,\n    top_score: 0\n  };\n\n  componentWillMount() {\n    \n    let friends = this.initSelected();\n    this.setState({ friends: friends });\n  }\n\n\n  initSelected = () => {\n    let friends = this.state.friends.map(friend => {\n      friend.selected = false;\n      return friend;\n    });\n\n    return friends;\n  };\n\n  shuffle = array => {\n    console.log(\"shuffle\");\n    for (let i = array.length - 1; i > 0; i--) {\n      let j = Math.floor(Math.random() * (i + 1)); // random index from 0 to i\n      [array[i], array[j]] = [array[j], array[i]]; // swap elements\n    }\n  };\n\n  selectFriend = id => {\n    console.log(\"selected id : \" + id);\n\n    const friend = this.state.friends.filter(friend => friend.id === id);\n    console.log(\"Matching friend : \" + JSON.stringify(friend));\n\n    console.log(\"Selected ? \" + friend[0].selected);\n    let friends;\n    let score = this.state.score;\n    let top_score = this.state.top_score;\n\n    if (friend[0].selected === true) {\n      console.log(\"Friend already selected!!\");\n      score = 0;\n      friends = this.initSelected();\n    } else {\n      console.log(\"Not yet selected.\");\n      score = score + 1;\n\n      if (score > top_score) {\n        top_score = score;\n      }\n\n      friends = this.state.friends.map(friend => {\n        if (friend.id === id) {\n          console.log(\"Setting friend id \" + id + \" to selected.\");\n          friend.selected = true;\n        }\n        return friend;\n      });\n    }\n\n    this.shuffle(friends);\n\n    this.setState({\n      friends: friends,\n      score: score,\n      top_score: top_score\n    });\n\n  };\n\n  render() {\n    console.log(\"rendering\");\n    console.log(\"score : \" + this.state.score);\n    console.log(\"top_score : \" + this.state.top_score);\n\n    return (\n      <Wrapper>\n        <Title>Friends List</Title>\n        <Scores>Score {this.state.score}| Top Score {this.state.top_score}</Scores>\n        {this.state.friends.map(friend => (\n          <FriendCard\n            selectFriend={this.selectFriend}\n            id={friend.id}\n            key={friend.id}\n            name={friend.name}\n            image={friend.image}\n            occupation={friend.occupation}\n            location={friend.location}\n          />\n        ))}\n      </Wrapper>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}